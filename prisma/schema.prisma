generator client {
  provider = "prisma-client-js"
  seed     = "node prisma/seed.js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id           String         @id @default(uuid())
  name         String         @unique
  description  String?
  imageUrl     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  influenceurs Influenceurs[]
}

model Influenceurs {
  id         String    @id @default(uuid())
  name       String
  imageUrl   String
  votesedAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  categoryId String?
  createdAt  DateTime  @default(now())
  isMain     Boolean?  @default(false)
  category   Category? @relation(fields: [categoryId], references: [id])
  votes      Votes[]
}

model Votes {
  id            String        @id @default(uuid())
  influenceurId String?
  phoneNumber   String
  otp           String
  otpExpiresAt  DateTime
  isValidated   Boolean       @default(false)
  timestamp     DateTime      @default(now())
  isSpecial     Boolean?      @default(false)
  influenceurs  Influenceurs? @relation(fields: [influenceurId], references: [id])
  ipAddress     String        // Adresse IP du client

  // Indexes basiques (sans clause WHERE)
  @@index([influenceurId], name: "idx_influenceurId")
  @@index([phoneNumber, timestamp], name: "idx_phone_timestamp")
  @@index([otp, otpExpiresAt], name: "idx_otp_expires")
  @@index([timestamp], name: "idx_timestamp")
  @@index([otp, timestamp], name: "idx_votes_otp_date_base")
  @@index([isValidated], name: "idx_isValidated")
  @@index([ipAddress], name: "idx_ip_timestamp")
}

model Users {
  id       Int    @id @default(autoincrement())
  name     String
  password String
}
